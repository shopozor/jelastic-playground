jpsVersion: 1.3
jpsType: install
application:
  id: consumer-frontend
  name: Consumer frontend
  version: 0.0
  baseUrl: https://raw.githubusercontent.com/softozor/shopozor-configuration/master

  globals:
    pathToSharedData: /opt/shared-data
    NODEJS_HOME: /home/jelastic
    NODEJS_CONTEXT: ROOT
    NODEJS_PATH_TO_CONTEXT: ${globals.NODEJS_HOME}/${globals.NODEJS_CONTEXT}
    NODEJS_PORT: 3000
    localConfigFile: ${globals.NODEJS_PATH_TO_CONTEXT}/config/local.json
    localConfigTemplateFile: ${globals.NODEJS_PATH_TO_CONTEXT}/config/local-template.json

  settings:
    fields:
      - type: spacer
        caption: Git repository
      - name: gitRepo
        caption: Url
        type: string
        default: https://bitbucket.org/softozor/shopozor-consumer-frontend
        required: true
        regex: "^https?:\\/\\/.+$"
        regexText: Incorrect URL. HTTPS link to Git repository is required.
      - name: gitBranch
        caption: Branch
        type: string
        default: master
        required: true
      - name: gitUser
        caption: User
        type: string
        required: true
      - name: gitPassword
        caption: Password
        type: string
        inputType: password
        required: true
      - type: spacer
      - name: apiHost
        caption: API_HOST
        type: hostpicker
        default: https://demo.vuestorefront.io
        required: true
      - name: apiPort
        caption: API_PORT
        type: numberpicker
        min: 0
        max: 9999
        editable: true
        default: 8080
        required: true

  env:
    topology:
      nodes:
        - nodeGroup: bl
          nodeType: nginx-dockerized
          displayName: Node balancing
          count: 1
          fixedCloudlets: 1
          cloudlets: 4
          env:
            DOCKER_EXPOSED_PORT: 22,80,443,${globals.NODEJS_PORT}
          volumeMounts:
            ${globals.pathToSharedData}:
              readOnly: false
              sourcePath: /data
              sourceNodeGroup: cp
          volumes: ${globals.pathToSharedData}
        - nodeGroup: cp
          nodeType: nodejs
          displayName: Application servers
          count: 2
          fixedCloudlets: 4
          cloudlets: 10
          env:
            PACKAGE_MANAGER: yarn
            PORT: ${globals.NODEJS_PORT}

  onInstall:
    - deployRepo
    - adaptConfig
    - setupStaticAssetsServing
    - startApp

  actions:
    deployRepo:
      api:
        - method: environment.vcs.CreateProject
          params:
            type: git
            context: ${globals.NODEJS_CONTEXT}
            url: ${settings.gitRepo}
            branch: ${settings.gitBranch}
            login: ${settings.gitUser}
            password: ${settings.gitPassword}
        - method: environment.vcs.Update
          params:
            context: ${globals.NODEJS_CONTEXT}
      nodeGroup: cp
    adaptConfig:
      - cmd [cp]:
          - cp ${globals.localConfigTemplateFile} ${globals.localConfigFile}
      - setNodeIPInLocalConfigs
      - replacePlaceholdersInLocalConfigs
    setNodeIPInLocalConfigs:
      forEach(nodes.cp):
        replaceInFile:
          path: ${globals.localConfigFile}
          replacements:
            - pattern: NODEJS_HOST
              replacement: ${@i.intIP}
          nodeId: ${@i.id}
    replacePlaceholdersInLocalConfigs:
      - replaceInFile:
          path: ${globals.localConfigFile}
          replacements:
            - pattern: API_HOST
              replacement: ${settings.apiHost}
            - pattern: API_PORT
              replacement: ${settings.apiPort}
        nodeType: nodejs
      - replaceEndpointVariables
    replaceEndpointVariables:
      script: ${baseUrl}/frontends/scripts/ReplaceEndpointPlaceholders.js
      apiPort: ${settings.apiPort}
      apiHost: ${settings.apiHost}
      pathToConfig: ${globals.localConfigFile}
    # TODO: remove this:
    setupStaticAssetsServing:
      - cmd [cp]:
          - mkdir /data 
          - chown -R root:root /data 
          - mv ${globals.NODEJS_PATH_TO_CONTEXT}/src/themes/default/assets /data/
        user: root
      - replaceInFile:
          path: /etc/nginx/nginx-jelastic.conf
          replacements:
            - pattern: \#USERLOCATIONS
              replacement: "location /assets {
                root ${globals.pathToSharedData};
              }"
        # was not able to make it work with nodeGroup: bl
        nodeType: nginx-dockerized
      - restartNodes [bl]
    startApp:
      cmd:
        - curl -fsSL ${baseUrl}/scripts/StartApp.sh | /bin/bash -s ${globals.NODEJS_PATH_TO_CONTEXT}
      nodeGroup: cp